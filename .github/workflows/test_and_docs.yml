name: Testing and Documentation

on:
  pull_request:
    branches:
      - 'albert'
  push:
    branches:
      - 'albert'

env:
  MYSQL_VERSION: '8.0'
  MYSQL_CONTAINER: 'docker_mysql'
  MYSQL_HOST: 'docker_mysql'
  MYSQL_ROOT_PASSWORD: 'devops'
  MYSQL_USER: 'devops'
  MYSQL_PASSWORD: 'devops'
  MYSQL_DATABASE: 'devops'

jobs:
  testing:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install and verify dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install cryptography
          pip list

      - name: Run MySQL container
        run: |
          docker run -d --name $MYSQL_CONTAINER -p 3306:3306 -e MYSQL_ROOT_PASSWORD=${{env.MYSQL_ROOT_PASSWORD}} -e MYSQL_USER=${{env.MYSQL_USER}} -e MYSQL_PASSWORD=${{env.MYSQL_PASSWORD}} -e MYSQL_DATABASE=${{env.MYSQL_DATABASE}} mysql:${{env.MYSQL_VERSION}}
          
          # Wait for MySQL to start
          chmod +x ./app/tools/check_mysql_ready.sh
          ./app/tools/check_mysql_ready.sh

      - name: Run tests and generate coverage report
        run: |
          coverage run -m pytest app
          coverage report -m

      - name: Run Pylint
        run: |
          pylint --fail-under=1.0 app

  generate-docs:
    needs: testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python for pdoc
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install pdoc
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip install python-dotenv

      - name: Generate Documentation
        run: |
          mkdir docs
          pdoc src/app.py -o docs
        working-directory: ./app

  snyk:
    needs: testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.8

      - name: Install and verify dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r app/requirements.txt
          pip list

      - name: Install Snyk
        run: npm install -g snyk

      - name: Authenticate Snyk
        run: snyk auth ${{ secrets.SNYK_AUTH_TOKEN }}

      - name: Test with Snyk
        run: |
          cd app
          snyk test
