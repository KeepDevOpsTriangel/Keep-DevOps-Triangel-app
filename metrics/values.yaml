coreDns:
  enabled: true
  service:
    selector:
      k8s-app: kube-dns
kubeControllerManager:
  enabled: false
kubeEtcd:
  enabled: true
  service:
    selector:
      k8s-app: ""
      component: etcd
kubeScheduler:
  enabled: false
kubeApiServer:
  enabled: true
kubelet:
  enabled: true
kubeDns:
  enabled: false
kubeProxy:
  enabled: true
kubeStateMetrics:
  enabled: true
nodeExporter:
  enabled: true
  jobLabel: node-exporter
  serviceMonitor:
    relabelings:
      - targetLabel: job
        replacement: node-exporter
prometheus-node-exporter:
  podLabels:
    jobLabel: node-exporter
  extraArgs:
    - --collector.filesystem.ignored-mount-points=^/(dev|proc|sys|var/lib/docker/.+|var/lib/kubelet/.+)($|/)
    - --collector.filesystem.ignored-fs-types=^(autofs|binfmt_misc|bpf|cgroup2?|configfs|debugfs|devpts|devtmpfs|fusectl|hugetlbfs|iso9660|mqueue|nsfs|overlay|proc|procfs|pstore|rpc_pipefs|securityfs|selinuxfs|squashfs|sysfs|tracefs)$

prometheus:
  enabled: true
  ## Configuration for Prometheus service
  prometheusSpec:
    scrapeInterval: 30s
    scrapeTimeout: 10s
    enableAdminAPI: true

    externalUrl: ""

    ruleSelectorNilUsesHelmValues: true
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false

defaultRules:
  create: true
  rules:
    alertmanager: true
    etcd: true
    configReloaders: true
    general: true
    k8s: true
    kubeApiserver: true
    kubeApiserverAvailability: true
    kubeApiserverSlos: true
    kubelet: true
    kubeProxy: true
    kubePrometheusGeneral: true
    kubePrometheusNodeRecording: true
    kubernetesApps: true
    kubernetesResources: true
    kubernetesStorage: true
    kubernetesSystem: true
    kubeScheduler: false
    kubeStateMetrics: true
    network: true
    node: true
    nodeExporterAlerting: true
    nodeExporterRecording: true
    prometheus: true
    prometheusOperator: true

## Configuration for alertmanager
alertmanager:
  config:
    global:
      resolve_timeout: 5m
    route:
      group_by: ["job"]
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: "slack"
      routes:
        - match:
            alertname: Watchdog
          receiver: "null"
    # This inhibt rule is a hack from: https://stackoverflow.com/questions/54806336/how-to-silence-prometheus-alertmanager-using-config-files/54814033#54814033
    inhibit_rules:
      - target_match_re:
          alertname: ".+Overcommit"
        source_match:
          alertname: "Watchdog"
        equal: ["prometheus"]
    receivers:
      - name: "null"
      - name: "slack"
        slack_configs:
          - api_url: "" # WEBHOOK SlackApp
            send_resolved: true
            channel: "#alarms-notifications-telegram-bot"
            title: '[{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] Monitoring Event Notification'
            text: |-
              {{ range .Alerts }}
                *Alert:* {{ .Labels.alertname }} - `{{ .Labels.severity }}`
                *Description:* {{ .Annotations.message }}
                *Graph:* <{{ .GeneratorURL }}|:chart_with_upwards_trend:> *Runbook:* <{{ .Annotations.runbook_url }}|:spiral_note_pad:>
                *Details:*
                {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                {{ end }}
              {{ end }}

## Manages Prometheus and Alertmanager components
prometheusOperator:
  enabled: true

additionalPrometheusRulesMap:
  rule-name:
    groups:
      - name: ruleset_1
        rules:
          - alert: HighRequestLatency
            expr: job:request_latency_seconds:mean5m{job="triangle-app"} > 0.2
            for: 0m
            labels:
              severity: page
            annotations:
              summary: High request latency
              description: This service has a high request latency.
          - alert: HighErrorRate
            expr: job:errors:rate5m{job="triangleapp"} > 0.2
            for: 0m
            labels:
              severity: page
            annotations:
              summary: High error rate
              description: This service has a high error rate.
          - alert: HighCPUUtilization
            expr: avg(node_cpu{mode="system"}) > 20
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: High CPU utilization on host {{ $labels.instance }}
              description: The CPU utilization on host {{ $labels.instance }} has exceeded 20%.
          - alert: HighMemoryUtilization
            expr: node_memory_MemTotal - node_memory_MemFree < 0.2 * node_memory_MemTotal
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: High memory utilization on host {{ $labels.instance }}
              description: The memory utilization on host {{ $labels.instance }} has exceeded 20%.
          - alert: TriangleAppConsumingMemoryMoreThanRequest
            expr: avg(container_memory_usage_bytes{pod=~"triangle-app-deployment-.*"}) by (pod) > avg(kube_pod_container_resource_requests{resource="memory",container="triangle-app-container"}) by (pod)
            for: 0m
            labels:
              severity: critical
              alertname: "TriangleApp container is consuming more memory than requested"
            annotations:
              summary: Pod {{ $labels.pod }} consuming more memory than requested
              description: "Pod more memory less than request"
              message: Pod {{ $labels.pod }} is consuming more memory than requested
          - alert: TriangleAppConsumingCPUMoreThanRequest
            expr: avg(container_memory_usage_bytes{pod=~"triangle-app-deployment-.*"}) by (pod) > avg(kube_pod_container_resource_requests{resource="memory",container="triangle-app-container"}) by (pod)
            for: 0m
            labels:
              severity: critical
              alertname: "TriangleApp container is consuming more cpu than requested"
            annotations:
              summary: Pod {{ $labels.pod }} consuming more cpu than requested
              description: "Pod more memory less than request"
              message: Pod {{ $labels.pod }} is consuming more cpu than requested
          - alert: TriangleAppConsumingMemoryMoreThanRequestMySQL
            expr: avg(container_memory_usage_bytes{pod=~"triangle-app-mysql-statefulset-0"}) by (pod) > avg(kube_pod_container_resource_requests{resource="memory",container="triangle-app-mysql"}) by (pod)
            for: 0m
            labels:
              severity: critical
              alertname: "TriangleApp-MySQL container is consuming more memory than requested"
            annotations:
              summary: Pod {{ $labels.pod }} consuming more memory than requested
              description: "Pod more memory less than request"
              message: Pod {{ $labels.pod }} is consuming more memory than requested
          - alert: ArgoCDConsumingMemoryMoreThanRequest
            expr: avg(container_memory_usage_bytes{pod=~"triangle-app-argocd-server-.*"}) by (pod) > avg(kube_pod_container_resource_requests{resource="memory",container="*triangle-app-argocd*"}) by (pod)
            for: 0m
            labels:
              severity: critical
              alertname: "TriangleApp-ArgoCD container is consuming more memory than requested"
            annotations:
              summary: Pod {{ $labels.pod }} consuming more memory than requested
              description: "Pod more memory less than request"
              message: Pod {{ $labels.pod }} is consuming more memory than requested
          - alert: HighNetworkTraffic
            expr: node_network_receive_bytes > 2e6
            for: 0m
            labels:
              severity: warning
            annotations:
              summary: High network traffic on host {{ $labels.instance }}
              description: The inbound network traffic on host {{ $labels.instance }} has exceeded 2 MB/s.
grafana:
  plugins:
    - grafana-piechart-panel
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: "default"
          orgId: 1
          folder: ""
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards/default
  dashboards:
    default:
      node-exporter:
        gnetId: 11074
        revision: 9
        datasource: Prometheus
      node-exporter-full:
        gnetId: 1860
        revision: 29
        datasource: Prometheus
      mongodb:
        gnetId: 16490
        revision: 1
        datasource: Prometheus
